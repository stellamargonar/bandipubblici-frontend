doctype html
html(lang='en', ng-app="callsApp")
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width')
    title= title
  
    block css
        link(href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css", rel="stylesheet" integrity="sha256-MfvZlkHCEqatNoGiOXveE8FIwMzZg4W85qfrfIFBfYc= sha512-dTfge/zgoMYpP7QbHy4gWMEGsbsdZeCXz7irItjcC3sPUFtf0kuFbDz/ixG7ArTxmDjLXDmezHubeNikyKGVyQ==" crossorigin="anonymous")
    
        link( href="http://maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet" type="text/css")
        link( href='http://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic' rel='stylesheet' type='text/css')
        link( href='http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800' rel='stylesheet' type='text/css')
        link(href="/css/app.css", rel="stylesheet")

    block js
      script(src='/components/angular/angular.min.js')
      script(src='/components/angular-resource/angular-resource.min.js')
      script(src='/components/angular-ui-router/release/angular-ui-router.min.js')
      script(src='/js/app.angular.js')
      if ENV_DEVELOPMENT
        script(src='http://localhost:35729/livereload.js')

  body(ng-controller="SourceController")
    include header

    include navbar

    .col-md-4
        div(data-spy="affix" data-offset-top="60" data-offset-bottom="200")
            form(ng-submit="saveSource()")
              .form-group
                label(for="baseUrl") Url
                input.form-control(type="text" ng-model="source.baseUrl", placeholder="Url", id="baseUrl")
              .form-group
                label(for="name") Name
                input.form-control(type="text" ng-model="source.name", placeholder="Name", id="name")

              fieldset
                label(for="regex") Url Regex
                .form-inline.form-group#regex
                  input.form-control(type="text" ng-model="source.fetchRegex", placeholder="Regex urls to be fetched", id="fetchRegex")
                  input.form-control(type="text" ng-model="source.saveRegex", placeholder="Regex urls to be saved", id="saveRegex")
                  
              fieldset
                label(for="patterns") Patterns
                .form-inline#patterns
                  input.form-control(type="text", ng-model="pattern.title")
                  input.form-control(type="text", ng-model="pattern.pattern")
                  a.btn-xs.btn-default(ng-click="addPattern()")
                    i.fa.fa-plus

              fieldset
                ul(ng-show="source.pattern")
                  li.list(ng-repeat="(key,value) in source.pattern") {{key}} : {{value}}
                    span.pull-right
                      a.btn-xs(ng-click="removePattern(key)")
                        i.fa.fa-minus
              p 
              input.btn.btn-info.btn-block(type="submit")    

            button.btn.btn-warning(ng-click="testSource()") Test Source
            .row
              alert(ng-show="error")
              .col-md-12(ng-show="testCalls")
                p Found {{testCalls.length}} calls
                ul
                  li(ng-repeat="call in testCalls") 
                    b {{call.title}}



   .col-md-8
        .post-preview(ng-repeat-start="source in sources")
          .pull-right
            button.btn-xs(ng-click="editSource(source)")
              i.fa.fa-edit
            button.btn-xs(ng-click="deleteSource(source)")
              i.fa.fa-times
          a(href="{{source.url}}")
              h4.post-title {{source.name}}
          p.post-meta 
              {{source.baseUrl}} 
          ul(ng-show="source.pattern")
            li(ng-repeat="(field, pattern) in source.pattern")
              {{field}}  :  {{pattern}}

          p.post-meta
            | Fetch : {{source.fetchRegex}}
            | Save : {{source.saveRegex}}

        hr(ng-repeat-end)